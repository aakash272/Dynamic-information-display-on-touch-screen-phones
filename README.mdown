The idea is to use the accelerometer and other sensors to improve user's browsing experience by dynamically changing 
the way information is displayed on finger based touch screen phones. As you know, capacitive touch screens offer a 
better sensitivity over previous resistive ones but have an inherent disadvantage of the finger itself causing 
disruption to the view of users. For eg, a user is scrolling through a list of items and reading them simultaneously. 
If the user scrolls the device with the left hand, scrolling and reading is not as convenient to do as it is 
with the right hand because the left-hand's finger obstructs the view and we read most languages from 
left to right. As a result, the users end up shifting hands or fingers for a convenient view. 
I've taken a list view which is prevalently found in almost all apps like contacts, music, videos, photos, settings,
etc and come up with a solution. I've made three very simple apps on an iPhone that will give an initial idea. 
Every app rearranges the text using accelerometer inputs. The rearrangement involves alignment or indentation and 
I've made three apps to demonstrate the functional benefit of both these implementations. The indent version 
is pretty neat and is definitely the better way out amongst the two. This overrides the landscape mode though, 
so extra sensors would be required for built-in implementation in new devices. This technique can be used in the 
table views of your custom app! Just tilt the phone to make the text flow like 'water in a plate'. I've taken an 
indentation based on trial and error. Changes can be made according to requirements.

The alignment version needs no changes.

The floating version is based on accelerometer inputs and the elements move around a lot more like the 'water in a plate' mentioned before.

I've also uploaded a demo video for the indentation version at  (http://www.youtube.com/watch?v=PZBl6acZniE) and for the floating version at (http://www.youtube.com/watch?v=EwMnIMac9s8)
Further feedback is welcome!

Licence:
Released under the MIT license.